continue
exit
valid_array(board.map { |array| array[x] })exit
valid_array(board.map { |array| array[x] })
x
board.map { |array| array[x] }
x
 valid_array(board.map { |array| array[x] })
 valid_array(board.map { |array| array[x] }
valid_array(row)
next
x
board[x]
boardp[x
continue
x
continue
x
continue
x
continue
x
continue
x
continue
x
continue
x
continue
sub_matrix
continue
sub_matrix
exit
sub_matrix
continue
sub_matrix
continue
sub_matrix
continue
sub_matrix
continue
sub_matrix
next
continue
sub_matrix
su_matrix
next
exit
board[index]
board[index][i..i+2]
continue
sub_matrix.flatten.to_set.length
sub_matrix.flatten.to_set.lengt
sub_matrix.flatten.to_set
sub_matrix
next
sub_matrix
board[index]
next
sub_matrix
next
sub_matrix
submatrix
exit
board[index][i..i+2]
board[index]
exit
board[index][i..i+2]
exit
array
next
(i) == index+3
next
continue
exit
index+3
(i)
(i) > index+3
i > index+3
i
next
continue
sub_array[index..(index+2)]
index
sub_array
next
(i)
i > index+3
i
index
exit
array
array.to_set
array
exit
row
continue
array.to_set
continue
exit
array.to_set
array
continue
board.map { |array| array[index] }
row
continue
array.to_set.length
array.length
array
