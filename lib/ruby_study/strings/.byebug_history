continue
exit
continue
OPOSSITE[word] == stack.last
continue
OPOSSITE[word] == stack.last
exit
OPOSSITE[word] 
POSSITE[word] 
word
continue
next
sentence
next
continue
sentence
next
sentence
last_size
next
last_size
sentence.gsub(/NORTH SOUTH|SOUTH NORTH|EAST WEST|WEST EAST/, "")
sentence
next
exit
sentence.gsub("NORTH SOUTH" || "SOUTH NORTH" || "EAST WEST" ||  "WEST EAST", "")
puts dirReduc(a) # ["WEST"]
sentence
sentence.size
last_size
next
continue
formatted_date
continue
formatted_date
continue
formatted_date
continue
formatted_date
formatted_date.join(', ').gsub(/(.*),(.*)/, '\1 and \2')
formatted_date.join(', ').gsub(/\(.*),(.*)/, '\1 and \2')
seconds >= hour
hour
seconds
continue
formatted_date.join(', ').gsub(/\K,/, ' and')
formatted_date.join(', ').gsub(/\K,/, 'and')
formatted_date.join(', ')
formatted_date.join(',')
continue
exit
exirt
formatted_date
formatted_pop
formatted_date.pop(1)
formatted_date
continue
last
formatted_date
last
next
continue
formatted_date.join(',')
next
exit
last
next
formatted_date
continue
numbers_map[char] * 10.pow(index)
continue
numbers_map[char] * 10.pow(index)
continue
numbers_map[char] * 10.pow(index)
continue
numbers_map[char] 
numbers_map.first
nubers_map.first
exit
nubers_map.first
nubers_map["1"]
nubers_map['1']
nubers_map[1]
nubers_map[:1]
nubers_map["1"]
nubers_map[char]
exit
  }
    '3': 3
    '2': 2,
    '1': 1,
characters = {
characters["1"]
characters['1']
characters[char]
characters[:char]
exit
characters[:char]
characters[char]
char
continue
next
matrix
next
temp2
tempw
next
array[sub_index]
temp
next
matrix
index
continue
index
continue
exit
temp
next
array.length - 1 - index
sub_index
matrix
index
continue
index
continue
index
continue
exit
array.length - 1 - index
matrix
index
continue
index
continue
exit
array[index+sub_index]
matrix
array
array[sub_index]
matrix[index+sub_index][max_x - index]
matrix
matrix[index+sub_index]
matrix
matrix[sub_index]
array[sub_index]
temp
next
matrix
next
temp
temp2
next
array[sub_index]
temp
next
continue
matrix
next
temp2
temp
next
temp
temp2
next
matrix
next
 array[sub_index] 
temp
next
continue
matrix
next
temp
next
temp
temp2
next
array[sub_index]
matrix[sub_index][max_x - index]
temp
next
c
exit
index
matrix.length / 2
n
index
temp
next
sub_index
continue
sub_index
continue
sub_index
exit
next
array.length - 1
sub_index
next
matrix
next
temp
array[sub_index]
matrix
next
temp2
temp
next
matrix
next
matrix
continue
matrix[max_x-sub_index][index]
temp
next
exit
matrix[max_x-sub_index][index]
matrix[max_x-sub_index][sub_index]
max_x
index
sub_index
matrix[max_x-index]
matrix[max_x-index][sub_index] 
matrix[max_x-index][sub_index]
temp2
temp
matrix
next
temp
matrix[max_x-index][max_x-sub_index] 
temp2
next
matrix[max_x-index][max_x-sub_index]
matrix[max_x-index]
matrix
next
matrix[sub_index][max_x - index] 
array[sub_index] 
temp
matrix[sub_index][max_x - index]
next
matrix[index + sub_index][max_x - index] 
matrix[index + sub_index]
matrix
continue
matrix
next
matrix[max_x-index][sub_index]
temp
next
exit
matrix[max_x-index]
matrix[max_x-index][max_x-sub_index]
temp
next
matrix
